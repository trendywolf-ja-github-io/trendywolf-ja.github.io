<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hux Blog</title>
    <description>这里是 @Hux黄玄 的个人博客，与你一起发现更大的世界 | 要做一个有 swag 的程序员</description>
    <link>https://huangxuan.me/</link>
    <atom:link href="https://huangxuan.me/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 08 Aug 2023 11:20:47 -0500</pubDate>
    <lastBuildDate>Tue, 08 Aug 2023 11:20:47 -0500</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>FRBの決定, 労働市場, インフレ, 株式市場 </title>
        <description>&lt;p&gt;FRBは、労働市場やインフレに関する現在のデータがFRB の目標に合致していることから、一時停止を選択する可能性がある。さらに、株式市場に対する楽観的な見方は、予想される経済成長と金融株に対するプラス要因に牽引され、拡大する上昇の継続を示唆している。市場の動向については、データとFRBの行動を注視すること。&lt;/p&gt;

&lt;h2 id=&quot;連邦準備制度理事会frbの一時停止の可能性&quot;&gt;連邦準備制度理事会（FRB）の一時停止の可能性&lt;/h2&gt;

&lt;p&gt;ある専門家によると、現在のデータはFRB（連邦準備制度理事会）が一時停止、もしくは計画を保留する可能性を示唆しているという。この専門家は、特に労働市場の状況を考慮すると、データはFRBの希望に沿ったものだと考えている。雇用創出は減少しているが、失業率は3.5％前後で安定している。さらに、求人倍率は低下し、労働参加率は上昇し、賃金上昇率は4.4％で、これは望ましい範囲に十分近い。これらすべての要因を考慮し、インフレ傾向を示すインフレデータも加味すると、FRBは一時停止を決定するだろうと専門家は予測している。&lt;/p&gt;

&lt;h2 id=&quot;株式市場の楽観&quot;&gt;株式市場の楽観&lt;/h2&gt;

&lt;p&gt;専門家はまた、株式市場に関しても前向きな見方を示し、拡大するラリーの継続を予想している。この楽観的な見方の主な理由のひとつは、期待される経済成長である。アトランタ連銀が発表した第3四半期のGDP予測は現在3.9％で、コンセンサス予想の減速に比べて加速している。この経済成長は企業にとって有益であり、業績のアップグレードにつながり、最終的には株価を押し上げると見られている。同専門家はまた、金融株は最近テクノロジーや他のセクターをアウトパフォームしているが、その一因は金融に有利なイールドカーブのスティープ化にあると指摘する。同専門家は、ソフトランディング、大規模なデフォルトの発生がないこと、利回りがさらに低下する可能性があることが、拡大するラリーの継続に寄与すると考えている。&lt;/p&gt;

&lt;p&gt;##サマリーとクロージング・ステートメント&lt;/p&gt;

&lt;p&gt;要約すると、現在のデータはFRBが一時停止を決定する可能性を裏付けている。労働市場の指標は、インフレデータと相まって、FRBの目標に沿っている。さらに、専門家は株式市場について楽観的な見方をしており、拡大する上昇が持続すると予想している。この楽観的な見方は、予想される経済成長と金融株のプラス要因による。いつものように、市場の軌道をよりよく理解するためには、データとFRBの行動を注意深く監視することが重要である。&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Aug 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/08/08/6288-ja/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/08/08/6288-ja/</guid>
        
        <category>FRBの決定</category>
        
        <category>労働市場</category>
        
        <category>インフレ</category>
        
        <category>株式市場</category>
        
        
      </item>
    
      <item>
        <title>FRB利上げ、労働市場、株式市場、金融 </title>
        <description>&lt;p&gt;低失業率、労働参加率の上昇など、労働市場がリバランシングの明るい兆しを見せているため、FRBの利上げは一時停止される可能性がある。経済成長は株式市場の拡大を促し、企業に恩恵をもたらし、株価上昇につながる可能性があると予想される。金融は、イールドカーブのスティープ化と大規模なデフォルトの欠如に支えられ、このところ好調に推移している。全体として、FRBの利上げにも株式市場にも明るい兆しがある。&lt;/p&gt;

&lt;h2 id=&quot;frbの利上げ-利上げは一時停止されるのか&quot;&gt;FRBの利上げ： 利上げは一時停止されるのか？&lt;/h2&gt;

&lt;p&gt;ある専門家によると、米連邦準備制度理事会（FRB）が利上げを保留または一時停止する可能性を示唆するデータがある。特に労働市場の状況がそれを裏付けている。雇用創出は減少傾向にあるが、失業率は3.5％前後と依然として低い。この労働市場の緩やかなリバランスはFRBにとってプラスに働くと見られている。さらに、労働参加率は上昇しており、働き盛りの年齢層では大流行前の水準を上回っている。これは、より多くの人々が労働市場に参入または再参入していることを示しており、これも明るい兆しである。さらに、賃金上昇率は4.4％で、FRBの目標に十分近い。これらの要因を総合すると、FRBは利上げを一時停止する可能性があると専門家は考えている。&lt;/p&gt;

&lt;h2 id=&quot;株式市場-成長の年&quot;&gt;株式市場 成長の年&lt;/h2&gt;

&lt;p&gt;専門家によれば、株式市場は素晴らしい1年であり、引き続き有望であるという。その理由のひとつは、経済成長への期待だ。アトランタ連銀が発表した第3四半期のGDP予測は3.9％で、これは最初の2四半期を上回り、コンセンサス予想よりも加速している。この経済成長は企業に恩恵をもたらし、業績のアップグレードサイクルと株価上昇につながる可能性がある。さらに専門家は、最近の金融セクターの業績について言及している。これは部分的にはイールドカーブのスティープ化によるもので、金融業にとってはプラスである。大規模なデフォルトがなく、利回りがさらに低下する可能性があることも、金融業にポジティブな見通しをもたらしている。全体として、市場拡大の継続を信じるに足る理由がある。&lt;/p&gt;

&lt;h2 id=&quot;クロージングステートメント&quot;&gt;クロージング・ステートメント&lt;/h2&gt;

&lt;p&gt;結論として、データはFRBが利上げを一時停止する可能性を支持している。労働市場は徐々にバランスを取り戻しつつあり、失業率は低く、労働参加率は上昇している。賃金の伸びもFRBの目標に近づいている。株式市場に関しては、経済成長が市場の裾野を広げ、企業に利益をもたらし、株価上昇につながる可能性があると予想される。イールドカーブがスティープ化していることもあり、金融業はこのところ好調に推移している。大規模な債務不履行がなく、利回りがさらに低下する可能性があることも、金融の見通しをポジティブなものにしている。全体として、FRBの利上げと株式市場には明るい兆しがある。&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Aug 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/08/08/3782-ja/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/08/08/3782-ja/</guid>
        
        <category>FRB利上げ、労働市場、株式市場、金融</category>
        
        
      </item>
    
      <item>
        <title>FRB利上げ、労働市場、インフレ抑制、株式市場 </title>
        <description>&lt;p&gt;FRBは、労働市場が目標に向かい、インフレが抑制されていることから、利上げを一時停止する可能性がある。力強い経済成長とさらなる拡大が期待される株式市場の見通しは明るい。常に情報を入手し、現状を総合的に分析した上で投資判断を下す。&lt;/p&gt;

&lt;h2 id=&quot;frbは利上げを一時停止する可能性&quot;&gt;FRBは利上げを一時停止する可能性&lt;/h2&gt;

&lt;p&gt;最新のデータによると、FRB（連邦準備制度理事会）は利上げの一時停止を決定する可能性がある。労働市場のデータによると、雇用創出は減少傾向にあり、失業率は3.5％前後で安定している。この労働市場の緩やかなリバランスはFRBの目標に沿ったものだ。さらに、求人数は減少しており、雇用が減速する可能性を示している。一方、労働参加率は上昇しており、より多くの人々が労働市場に参入または再就職していることを示している。賃金上昇率も4.4％と健全で、FRBが望む水準に近い。これらの要因はすべて、労働市場がFRBの目標に向かっていることを示しており、利上げを一時停止する理由を与えている。&lt;/p&gt;

&lt;p&gt;インフレ率データも利上げ休止の考えを裏付けている。FRBは2％前後のインフレ率を目標としており、現在のデータはその目標と一致している。インフレがコントロールされているため、FRBは金融政策をさらに引き締める必要はないと考えているのだろう。これは、ローンや住宅ローンの金利が近い将来上昇しない可能性があることを意味し、借り手にとっては朗報だ。&lt;/p&gt;

&lt;h2 id=&quot;株式市場に対するポジティブな見通し&quot;&gt;株式市場に対するポジティブな見通し&lt;/h2&gt;

&lt;p&gt;専門家は株式市場についても前向きな見通しを示している。この楽観的見通しの主な要因として、経済成長を挙げている。アトランタ連銀が発表した第3四半期のGDP成長率は3.9％で、過去2四半期を上回っている。GDP成長の加速は企業にとってプラスであり、業績のアップグレードにつながり、最終的には株価を押し上げる。&lt;/p&gt;

&lt;p&gt;最近は金融株も好調で、テクノロジー株を上回っている。その理由のひとつは、金融機関に有利なイールド・カーブのスティープ化である。イールド・カーブがスティープになるということは、長期金利が短期金利より高くなることを意味し、銀行は貸出からより多くの利益を得ることができる。この傾向が金融株の好調なパフォーマンスに寄与している。&lt;/p&gt;

&lt;p&gt;さらに専門家は、株式市場はさらに拡大する可能性があると指摘する。ソフトランディング、つまり大きな景気後退を伴わない緩やかな経済成長の鈍化を予想している。これは市場にとってプラスであり、大規模なデフォルトのリスクを軽減し、安定をもたらす。さらに、利回りがさらに低下する可能性もあり、これは株式にとってプラスに働くだろう。&lt;/p&gt;

&lt;h2 id=&quot;クロージングステートメント&quot;&gt;クロージング・ステートメント&lt;/h2&gt;

&lt;p&gt;結論として、データはFRBが利上げを一時停止する可能性を裏付けており、これは借り手に好影響を与える可能性がある。株式市場も力強さの兆しを見せており、力強い経済成長と、特に金融セクターの株式にはプラス要因がある。しかし、市場環境は急速に変化する可能性があることに留意することが重要であり、常に情報を入手し、現状を総合的に分析して投資判断を下すことが賢明である。&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Aug 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/08/08/3318-ja/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/08/08/3318-ja/</guid>
        
        <category>FRB利上げ、労働市場、インフレ抑制、株式市場</category>
        
        
      </item>
    
      <item>
        <title>인플레이션 목표와 경제 성장: 정책 실수의 영향과 주의점</title>
        <description>&lt;ul&gt;
  &lt;li&gt;주제: 인플레이션 목표에 대한 정책 실수와 그에 따른 경제 성장에 대한 영향&lt;/li&gt;
  &lt;li&gt;근거: 추가 인상을 예상하고 있는 정책 실수는 경제 성장에 불필요한 결과를 초래할 수 있음&lt;/li&gt;
  &lt;li&gt;결론: 2% 인플레이션 목표에 빨리 도달하기 위해 정책 실수를 할 경우, 공급 측면과 노동 시장 등에서 혼란을 겪을 수 있으며, 필요한 것보다 많은 수요를 위축시킬 수 있음&lt;/li&gt;
  &lt;li&gt;추가 내용: 연준과 영란 은행은 인플레이션 목표에 대한 논의를 시작하기를 원하지 않으며, 신뢰성을 확립하기 위해 논의를 미루고 있는 상황임&lt;/li&gt;
  &lt;li&gt;다른 측면: 취약한 경제와 금융 부문에서 여전히 많은 일이 일어나고 있으며, 상업용 부동산에 대한 재융자는 천천히 일어나야 하므로 조심해야 함&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 21 Jul 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/07/21/inflegro/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/07/21/inflegro/</guid>
        
        <category>인플레이션목표</category>
        
        <category>정책실수</category>
        
        <category>경제성장</category>
        
        <category>인플레이션목표논의미루기</category>
        
        
      </item>
    
      <item>
        <title>연착륙 내러티브 모멘텀</title>
        <description>&lt;p&gt;이번 주에는 채권과 주식 시장이 실행될 것이다. 인플레이션은 2%로 유지되거나 가속화될 것으로 예상된다. 서비스 인플레이션에 따라 인플레이션 경로가 결정될 것이다. 연착륙 내러티브는 모멘텀을 가지고 있으며, CPI와 BPI는 연착륙 내러티브에 관련된다. 네덜란드 말은 연방 준비 은행의 정책에 대한 견해를 변경했으며, 인플레이션은 부드럽게 진행될 것이지만 노동 시장과 주택 시장의 위험은 여전히 존재한다. 연착륙 소프트 인플레이션 이야기는 경제에 긍정적인 영향을 준다.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Jul 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/07/21/inflation/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/07/21/inflation/</guid>
        
        <category>연착륙</category>
        
        <category>내러티브</category>
        
        <category>모멘텀</category>
        
        
      </item>
    
      <item>
        <title>연준 회의를 앞두고 조용한 시기, 혼란스러운 데이터 덤프에서 경제 확인: 다가오는 회의에서의 연준의 행동은?</title>
        <description>&lt;ul&gt;
  &lt;li&gt;주제: 연준의 중요성과 연방 기금 금리의 실질적인 인상&lt;/li&gt;
  &lt;li&gt;근거: 연준 회의를 앞두고 조용한 시기, 혼란스러운 데이터 덤프에서 경제 확인&lt;/li&gt;
  &lt;li&gt;결론: 다가오는 회의에서 아마도 아무것도 하지 않을 것으로 예상되며, 앞으로 연준의 행동을 지켜봐야 함&lt;/li&gt;
  &lt;li&gt;추가 정보: RBA의 하이킹 예시를 통해 경제의 탄력성과 연준의 역할 강조&lt;/li&gt;
  &lt;li&gt;수익 불황에 대비하는 경향과 수익 기대치의 개선으로 시장 개선됨을 언급&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 21 Jul 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/07/21/fedmeeting/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/07/21/fedmeeting/</guid>
        
        <category>연준</category>
        
        <category>연방기금금리</category>
        
        <category>경제확인</category>
        
        <category>RBA</category>
        
        
      </item>
    
      <item>
        <title>연준의 중요성과 다가오는 회의의 예상</title>
        <description>&lt;ul&gt;
  &lt;li&gt;주제: 연준의 중요성에 대한 의견&lt;/li&gt;
  &lt;li&gt;근거: 연준 회의를 앞두고 조용한 시기이지만, 연방 기금 금리의 실질적인 인상을 예상하여 가격을 책정하고 있음&lt;/li&gt;
  &lt;li&gt;결론: 다가오는 회의에서 아마도 아무것도 하지 않을 것으로 예상되며, 앞으로 연준의 움직임을 지켜봐야 함&lt;/li&gt;
  &lt;li&gt;추가 정보: RBA의 예시를 들어 몇 달 동안 멈추었다가 다시 하이킹을 하는 경향을 보이고 있음&lt;/li&gt;
  &lt;li&gt;경제의 탄력성과 연준의 역할에 대한 의견&lt;/li&gt;
  &lt;li&gt;시장을 이끄는 요인으로 수익 기대치가 개선되고 있음&lt;/li&gt;
  &lt;li&gt;사람들이 숨을 쉬고 있다는 것을 알기 때문에 이것은 복사본일 가능성이 있음&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 21 Jul 2023 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2023/07/21/Fedcom/</link>
        <guid isPermaLink="true">https://huangxuan.me/2023/07/21/Fedcom/</guid>
        
        <category>연준</category>
        
        <category>중요성</category>
        
        <category>금리인상</category>
        
        <category>경제탄력성</category>
        
        
      </item>
    
      <item>
        <title>My Programming Languages Spectrum</title>
        <description>&lt;iframe id=&quot;chart&quot; src=&quot;https://huangxuan.me/PL-chart/&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;width: 100%&quot;&gt;
&lt;/iframe&gt;
</description>
        <pubDate>Tue, 05 May 2020 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2020/05/05/pl-chart/</link>
        <guid isPermaLink="true">https://huangxuan.me/2020/05/05/pl-chart/</guid>
        
        
      </item>
    
      <item>
        <title>Vim 与中文输入法</title>
        <description>&lt;p&gt;Update: 我最后还是放弃把 Vim 作为主要编辑器来输入中文了，整体使用下来 mental model 的 cost 太重了。记笔记时用用中文呀或者改改博客时偶尔用一下还蛮去，这个时候这个功能至少能帮助你 Esc 之后不煞笔，所以也不算完全没有价值吧……&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;我相信很多中文世界的 Vimer 都遇到过这个烦恼，在 vim 的 insert 模式时可能突然想输个中文，输完之后会本能的直接 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;esc&lt;/code&gt; 接 normal 模式操作，结果发现跳出来的是中文输入法……对于 vscode，我一般会在几次错误之后被逼到退出 vscode vim 模式，而对于终端中用的 neovim，就只能尽量不输入中文了。&lt;/p&gt;

&lt;p&gt;为了满足我 1% 用 vim 输入中文的场景（比如写博客），我还是想看看有没有什么解决方案，Google 出来的解决方案基本是：&lt;em&gt;在退出 insert 模式时记住当时的输入法，并自动切换到默认输入法（一般是英文）给 normal 模式用，并且在下一次进入 insert 模式时再切换回来。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;原生 vim 的话，可以使用 &lt;a href=&quot;https://github.com/ybian/smartim&quot;&gt;smartim&lt;/a&gt; 插件，原理是调用 &lt;a href=&quot;https://github.com/daipeihust/im-select&quot;&gt;im-select&lt;/a&gt; 这个 CLI 工具来切换输入法。&lt;/p&gt;

&lt;p&gt;对于 VSCode-vim 的话，smartim 的移植也在近期的 PR 中被 merge 到了插件里，&lt;a href=&quot;https://github.com/VSCodeVim/Vim#use-im-select&quot;&gt;详情见文档的这部分配置&lt;/a&gt;，需要指定一下默认输入法和 im-select 的 binary 路径就好。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;
不过实话说，在 vim 中编辑中文的效率和体验和英文比都是大打折扣的。因为中文分词难度太高，不像英文可以简单依靠一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;split &quot; &quot;&lt;/code&gt; 搞定。所以其实无论 vim（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;w&lt;/code&gt;ord，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt;egin，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;e&lt;/code&gt;nd），emacs 还是操作系统自带的（比如 macOS 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt + 箭头&lt;/code&gt;） 「按词移动」功能对于中文都仅仅是跳转到下一个空格处而已，对于中文来说基本就是下一句了……其他常用操作诸如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&lt;/code&gt;eplace, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t&lt;/code&gt;ill 也都无法很好的工作，基本只能靠 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hjkl&lt;/code&gt; 爬行……&lt;/p&gt;

&lt;p&gt;不过也算聊胜于无吧，由于我的主力外置键盘是 HHKB，能用 vim 操作的一个子集（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hjkl&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;I&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; etc.）可能也比按住 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fn&lt;/code&gt; 的方向键好用……&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Oct 2018 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2018/10/06/vim-cn-im/</link>
        <guid isPermaLink="true">https://huangxuan.me/2018/10/06/vim-cn-im/</guid>
        
        <category>Vim</category>
        
        
      </item>
    
      <item>
        <title>Avoiding success at all cost</title>
        <description>&lt;p&gt;“Avoiding success at all cost” is the informal motto behinds &lt;a href=&quot;https://www.haskell.org/&quot;&gt;Haskell&lt;/a&gt;. It could be parenthesized in two ways, either “Avoiding (success at all cost)” or “(Avoiding sucess) (at all cost)”.&lt;/p&gt;

&lt;p&gt;I’m not going to interpret them directly but rather to share some thoughts on “the success vs. costs” basing on my very own understanding and experience.&lt;/p&gt;

&lt;h3 id=&quot;the-success-vs-cost-of-language-design&quot;&gt;The success vs. cost of language design&lt;/h3&gt;

&lt;p&gt;There’re always trade offs (or compromises) in any software design, and programming language design has no exceptions.&lt;/p&gt;

&lt;p&gt;In other words, all language design decision that made them “successful” i.e. being popular and widely-used in industry or education for some reasons, all comes with their own “costs”: being unsafe, limited expressiveness, or having bad performance, etc.&lt;/p&gt;

&lt;p&gt;Whether or not the “cost” is a problem really depends on scenarios, or their goals. For instances, Python/JavaScript are both very expressive and beginner-friendly by being dynamically-typed, sacrifing the type safety and performance. Java, in constrast, uses a much safer and optimization-friendly type system but being much less expressive. Another typicial comparison would be memory management in programming languages, where languages that are “managed” (by either ARC or Gabage Collector) could be much easier and safer (in terms of memory) for most programmers but also considerred slower than languages that are “closer to the metal”.&lt;/p&gt;

&lt;p&gt;None of these “costs”, or “differences”, really prevent them from being immortally popular.&lt;/p&gt;

&lt;p&gt;For Haskell, the story becomes quite different: being research-oriented means the goal of this language is to pursue some “ultimate” things: the “ultimate” simplicity of intermediate representation, the “ultimate” type system where safety and expressiveness can coexist, the “ultimate” compilation speed and runtime performance, the “ultimate” concise and elegant concrete syntax, the “ultimate”…I don’t know. But it has to be some “ultimate” things that is very difficult, probably endless and impossible, to achieve.&lt;/p&gt;

&lt;p&gt;This, as a result, made all language decisions in Haskell became very hard and slow, because &lt;strong&gt;almost nothing can be scarified&lt;/strong&gt;. That’s why Haskell insisted to be lazy to “guard” the purity regardless of some problems of being “call-by-need”; a decent IO mechanisms is missing in the first 4 yrs after the project’s start until P Walder found &lt;em&gt;Monad&lt;/em&gt;; and the &lt;em&gt;Type Class&lt;/em&gt;, which is first proposed in P Walder’s 1989 paper, spent yrs long to implement and popularize.&lt;/p&gt;

&lt;p&gt;As a side note though, it doesn’t mean there is no compromise in Haskell at all. It’s just as minimized as it could be during its progress. When one audience asking why we have Haskell and OCaml, which’re quite similar in very high level, both survived, SPJ replies:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There’s just a different set of compromises.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-success-vs-cost-of-language-design-process&quot;&gt;The success vs. cost of language design process&lt;/h3&gt;

&lt;p&gt;Another common but extremely controversial (if not the most) topics of programming language design is about its design process: Would you prefer dictatorship or a committee (in other words, a dictatorship of many?)? Would you prefer being proprietary or standardized? In which form would you write the standards, in human nature language, pseudo code, or formal semantics? How many and how frequently breaking changes dare you make? Would you let open source community involve in?&lt;/p&gt;

&lt;p&gt;Again, I think there is no THE answer for all those questions. Majority of popular programming languages came and are still on going with very different paths.&lt;/p&gt;

&lt;p&gt;Python, whose creater, Guido van Rossum, known as the “Benevolent Dictator For Life” (BDFL), i.e. good kind of dictator, still play the central role (until July 2018) of the Python’s development after Python getting popular and adapt a open source and community-based development model. This factor direcly contribute to the fact that Python 3, as a breaking (not completely backward-compatible and not easy to port) but good (in terms of language design and consistency) revision of the language can still be landed, despite of many communities’ pressures. There’re many language (Ruby, Perl, Elm) also choose to follow this route.&lt;/p&gt;

&lt;p&gt;JavaScript, widely known as being created by Brendan Eich in 10 days, in comparision, quickly involved into a committee (TC39) and standardized (ECMAScript) language due to both the open nature of the Web and fast adoption of itself. But Brendan, as the creater, wasn’t even powerful enough to push the committee landing ES4, which is also a breaking but much better revision, but ended up with the ES5 (Harmony), a backward-compatible, yet much less ambitious version due to many political “fights” between different parties (e.g. Mozilla, Microsoft, Yahoo etc.) thus the history wasn’t changed. Even the latest rising and yearly releasing of the “modern” JavaScript (ES6 or ES2015, 2016, 2017…) are mainly driven by the new generation of committee parties (+ Google, Facebook, Airbnb etc.) and still in a very open and standardized way.&lt;/p&gt;

&lt;p&gt;As you can see here, even the history and progress of two rather similar languages can be so different, not to mention more proprietary languages such as Java from Sun/Oracle, C# from Microsoft, OC/Swift from Apple (though the latter was open sourced) or more academia and standardized language like SML and Scheme which both has a standard written in formal semantics.&lt;/p&gt;

&lt;p&gt;So it’s not not obvious that Haskell, also chose its own unique process to suit its unique goal. Although it backs on academia, it chose a rather practical/less-formal approach to define the language, i.e. the compiler implementation over standardization (plus many “formal” fragments among papers though), which is more like C++/OCaml from this point of view. It has a committee, but instead of being very open and conservative, it’s more dictatorial (in terms of average users) and super aggressive in terms of making breaking changes. As a result however, it trained a group of very change-tolerant people in its community…All of these quirks and odds combined works very well and avoid the Haskell “becoming too success too quickly”.&lt;/p&gt;

&lt;h3 id=&quot;end-thoughts&quot;&gt;End thoughts&lt;/h3&gt;

&lt;p&gt;To be fair, Haskell has alreay been very “successful” nowdays, in particular academia (for education, sexy type laboratory etc.) but also industry, either being used in real business or being very reputable among programmers (as being both hard and fun).&lt;/p&gt;

&lt;p&gt;I am not confident and qualified to say Haskell is success in the right degree at the right time. But it’s great to see it, after more than 20 and now almost 30 yrs, slowly figure out its very own way, to “Escape from the Ivory Tower”, and keep going beyond.&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Sep 2018 00:00:00 -0500</pubDate>
        <link>https://huangxuan.me/2018/09/27/avoiding-success-at-all-cost/</link>
        <guid isPermaLink="true">https://huangxuan.me/2018/09/27/avoiding-success-at-all-cost/</guid>
        
        <category>Haskell</category>
        
        <category>笔记</category>
        
        <category>En</category>
        
        
      </item>
    
  </channel>
</rss>
